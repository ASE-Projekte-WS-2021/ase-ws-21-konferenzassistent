name: Build CI
on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build

    - name: Sign Android release
      uses: r0adkll/sign-android-release@v1
      id: sign_app
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.1
      with:
        name: apk
        path: ${{steps.sign_app.outputs.signedReleaseFile}}

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download APK from build
      uses: actions/download-artifact@v1
      id: download
      with:
        name: apk  
        
    - name: 'Echo download path'
      run: echo ${{steps.download.outputs.download-path}}

    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Upload our Artifact Assets
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{steps.download.outputs.download-path}}
        asset_name: Konferenzassistent.apk
        asset_content_type: application/zip

